[
    {
        "id":"1",
        "title":"Why are you using firebase? What other options do you have to implement authentication?",
        "description":"Most apps need to know the identity of a user. Knowing a users identity allows an app to securely save user data in the cloud and provide the same personalized experience across all of the user's devices.Firebase Authentication provides backend services, easy-to-use SDKs, and ready-made UI libraries to authenticate users to your app. It supports authentication using passwords, phone numbers, popular federated identity providers like Google, Facebook and Twitter, and more.Firebase Authentication integrates tightly with other Firebase services, and it leverages industry standards like OAuth2.0 and OpenID Connect, so it can be easily integrated with your custom backend.",
        "img":"https://www.gstatic.com/mobilesdk/190805_mobilesdk/woman-at-desktop@2x.png"
    },
    {
        "id":"2",
        "title":"what is `cors`? ",
        "description":"Cross-origin resource sharing (CORS) is a browser mechanism which enables controlled access to resources located outside of a given domain. It extends and adds flexibility to the same-origin policy (SOP). However, it also provides potential for cross-domain attacks, if a website's CORS policy is poorly configured and implemented. CORS is not a protection against cross-origin attacks such as cross-site request forgery (CSRF).",
        "img":"https://nordicapis.com/wp-content/uploads/What-is-CORS-.png"
    },
   
    {
        "id":"3",
        "title":"How does the private route work?",
        "description":"he private route component is similar to the public route, the only change is that redirect URL and authenticate condition.If the user is not authenticated he will be redirected to the login page and the user can only access the authenticated routes If he is authenticated (Logged in).",
        "img":"https://miro.medium.com/max/1080/1*Z3KL8VZdP7bcmEy9YsZGKg.png"
    },
    {
        "id":"4",
        "title":"What is Node? How does Node work?",
        "description":"Node.js is an open-source backend javascript runtime environment. It is a used as backend service where javascript works on the server-side of the application. This way javascript is used on both frontend and backend. Node.js runs on chrome v8 engine which converts javascript code into machine code, it is highly scalable, lightweight, fast, and data-intensive. As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications. In the following 'hello world' example, many connections can be handled concurrently. Upon each connection, the callback is fired, but if there is no work to be done, Node.js will sleep.",
        "img":"https://www.devteam.space/wp-content/uploads/2022/05/nodejs.jpg"
    }
]